
package view;

import Utilities.Base64Image;
import entity.Student_entity;
import java.awt.Toolkit;
import java.awt.print.PrinterException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.table.DefaultTableModel;
import model.Student_model;




/**
 * 
 * @author amol
 */
public class StudentList extends javax.swing.JFrame {
//String Path="./data/java.png";
    /** Creates new form StudentList */
 Base64Image base64=new Base64Image();
  ClassLoader cl = this.getClass().getClassLoader();
		Toolkit toolkit = Toolkit.getDefaultToolkit();
 
                /**
                 * 
                 */
                public StudentList() {
        initComponents();
        

		
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Student List");
        setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        setIconImage(toolkit.getImage(cl.getResource("image/java.png")));
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Student List"));

        jScrollPane1.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_ALWAYS);
        jScrollPane1.setInheritsPopupMenu(true);

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Student Id", "Name", "age", "contact No"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.Integer.class, java.lang.Long.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.setToolTipText("Student List");
        jTable1.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_ALL_COLUMNS);
        jTable1.setAutoscrolls(false);
        jTable1.setRowSelectionAllowed(false);
        jTable1.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(jTable1);

        jButton1.setText("Refresh");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Print");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("Close");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(394, Short.MAX_VALUE)
                .addComponent(jButton1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton3)
                    .addComponent(jButton2)
                    .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, 23, Short.MAX_VALUE))
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 645, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 287, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
         DefaultTableModel model1 = (DefaultTableModel) jTable1.getModel();
         model1.getDataVector().removeAllElements();
        loadStudentTable();
    }//GEN-LAST:event_formWindowOpened

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
       DefaultTableModel model1 = (DefaultTableModel) jTable1.getModel();
       model1.getDataVector().clear();
       loadStudentTable();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        try {
            jTable1.print();

        } catch (PrinterException ex) {
            Logger.getLogger(StudentList.class.getName()).log(Level.SEVERE, null, ex);
        }

// TODO add your handling code here:
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
this.setVisible(false);
// TODO add your handling code here:
    }//GEN-LAST:event_jButton3ActionPerformed


    /**
     * 
     */
    public  void loadStudentTable()
    {

        DefaultTableModel model2 = (DefaultTableModel) jTable1.getModel();
        model2.getDataVector().clear();

        try
        {
        Student_model.loadAllEntries("./data/");
        Student_model.loadAllKeys("./data/");

        for (Student_entity s : Student_model.AllStudents) {
          //  String id = String.valueOf(s.getId());

            // base64.decodeBase64(s.getPhoto(),50,50);
                       //  p.setSize(50,50);
                        // jImagePanel.add(p);
                       //  jImagePanel.repaint();

            Object[] model = {s.getId(), s.getName(), s.getage(),s.getcon()};

            DefaultTableModel model1 = (DefaultTableModel) jTable1.getModel();
            model1.addRow(model);

            jTable1.repaint();

        }
        }
        catch(Exception ex)
        {
            System.out.println("navneet....."+ex);
        }

    }
/*
  void ld1()
  {
      DefaultTableModel model2 = (DefaultTableModel) jTable1.getModel();
        model2.getDataVector().clear();
model2.getDataVector().removeAllElements();
        try
        {
        Student_model.loadAllEntries("./data/");
        Student_model.loadAllKeys("./data/");

        for (Studemt_entity s : Student_model.AllStudents) {
            String id = String.valueOf(s.getId());
            if(yr.getSelectedItem().toString().equalsIgnoreCase(s.getyr()))
            {            Object[] model = {s.getId(), s.getName(),s.getcast(), s.getyr(), s.getbr()};

            DefaultTableModel model1 = (DefaultTableModel) jTable1.getModel();
            model1.addRow(model);

            jTable1.repaint();
            }
        }
        }
        catch(Exception ex)
        {
            System.out.println("navneet.....");
        }
  }
void ld2()
{
     DefaultTableModel model2 = (DefaultTableModel) jTable1.getModel();
        model2.getDataVector().clear();
    //    model2.getDataVector().removeAllElements();
               try
        {
        Student_model.loadAllEntries("./data/");
        Student_model.loadAllKeys("./data/");

        for (Stude_entity s : Student_model.AllStudents) {
            String id = String.valueOf(s.getId());
            if(br.getSelectedItem().toString().equalsIgnoreCase(s.getbr()))
            {            Object[] model = {s.getId(), s.getName(),s.getcast(), s.getyr(), s.getbr()};

            DefaultTableModel model1 = (DefaultTableModel) jTable1.getModel();
            model1.addRow(model);

            jTable1.repaint();
            }
        }
        }
        catch(Exception ex)
        {
            System.out.println("navneet.....");
        }
}
  */
    /**
    * @param args the command line arguments
    */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new StudentList().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    public static javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables

  /*  private void ld3() {
          DefaultTableModel model2 = (DefaultTableModel) jTable1.getModel();
        model2.getDataVector().clear();
       model2.getDataVector().removeAllElements();
        jTable1.repaint();

        try
        {
        Student_model.loadAllEntries("./data/");
        Student_model.loadAllKeys("./data/");

        for (Studemt_entity s : Student_model.AllStudents) {
           // String id = String.valueOf(s.getId());
            if((yr.getSelectedItem().toString().equalsIgnoreCase(s.getyr()))&&
                    (br.getSelectedItem().toString().equalsIgnoreCase(s.getbr())))
            {
            Object[] model = {s.getId(), s.getName(),s.getcast(), s.getyr(), s.getbr()};

            DefaultTableModel model1 = (DefaultTableModel) jTable1.getModel();
            model1.addRow(model);
            jTable1.repaint();

        }
        }
        }
        catch(Exception ex)
        {
            System.out.println("navneet.....");
        }



    }
*/
}
