/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * Mainview.java
 *
 * Created on Apr 15, 2012, 2:47:13 PM
 */
package view;
import ImagePanel.ImagePanel;

import Utilities.Base64Image;
import Utilities.ZipRetrieve;
import Utilities.addtozip;
import Utilities.settheme;

import model.Student_model;
import controler.Student_control;
import entity.Student_entity;


import java.util.Date;

import java.util.logging.Level;
import java.util.logging.Logger;

import javax.imageio.ImageIO;

import java.awt.*;
import javax.swing.*;
import java.io.*;

/**
 *
 * @author Navneet
 */
public class Main_form extends javax.swing.JFrame {

    private Student_control _c = new Student_control();
    private Student_entity _s = new Student_entity();
    Base64Image base64 = new Base64Image();
    ClassLoader cl = this.getClass().getClassLoader();
    Toolkit toolkit = Toolkit.getDefaultToolkit();
    private ImagePanel _image;
    private boolean isImage;

    /** Creates new form Mainview */
    
    public static String SPath = "./data/";
String path=null;
   // private ohcrypt gui;
  //  private byte[] salt;
/**
 * 
 */
public Main_form() {

        initComponents();
        jMenu1.add(settheme.look(this), 1);


    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        jImagePanel = new javax.swing.JPanel();
        jBInsert = new javax.swing.JButton();
        lb7 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jTStuId = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jTName = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jTcon = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jB_retrive = new javax.swing.JButton();
        jB_update = new javax.swing.JButton();
        jB_reset = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jB_delete = new javax.swing.JButton();
        jTage = new javax.swing.JTextField();
        jTadd = new javax.swing.JTextField();
        jB_add = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem_adduser = new javax.swing.JMenuItem();
        jMenuItem_exit = new javax.swing.JMenuItem();
        jMenu3 = new javax.swing.JMenu();
        jMenuItem_backup = new javax.swing.JMenuItem();
        jMenuItem_restore = new javax.swing.JMenuItem();
        jMenuItem_history = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        about = new javax.swing.JMenuItem();
        update = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Main_Form");
        setIconImage(toolkit.getImage(cl.getResource("image/java.png")));

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Student Identity"));

        jImagePanel.setLayout(new java.awt.BorderLayout());

        jBInsert.setText("Insert ");
        jBInsert.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBInsertActionPerformed(evt);
            }
        });

        lb7.setText(" Photograph:");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addComponent(lb7)
                .addGap(74, 74, 74)
                .addComponent(jImagePanel, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 54, Short.MAX_VALUE)
                .addComponent(jBInsert, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(45, 45, 45))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(58, 58, 58)
                        .addComponent(lb7))
                    .addComponent(jImagePanel, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(58, 58, 58)
                        .addComponent(jBInsert)))
                .addContainerGap(24, Short.MAX_VALUE))
        );

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Student Information System"));
        jPanel1.addContainerListener(new java.awt.event.ContainerAdapter() {
            public void componentAdded(java.awt.event.ContainerEvent evt) {
                jPanel1ComponentAdded(evt);
            }
        });

        jLabel1.setText("Student ID:");

        jTStuId.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTStuIdActionPerformed(evt);
            }
        });

        jLabel2.setText("Name:");

        jLabel3.setText("Age:");

        jLabel4.setText("Contact No:");

        jLabel5.setText("Address");

        jB_retrive.setText("Retrive");
        jB_retrive.setToolTipText("To add a new  Entry.");
        jB_retrive.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jB_retriveActionPerformed(evt);
            }
        });

        jB_update.setText("Update");
        jB_update.setToolTipText("To  update  previous Entry.");
        jB_update.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jB_updateActionPerformed(evt);
            }
        });

        jB_reset.setText("Reset");
        jB_reset.setToolTipText("To reset all textboxes.");
        jB_reset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jB_resetActionPerformed(evt);
            }
        });

        jButton3.setText("Studet list");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jB_delete.setText("Delete");
        jB_delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jB_deleteActionPerformed(evt);
            }
        });

        jB_add.setText("Add");
        jB_add.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jB_addActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addComponent(jLabel2)
                    .addComponent(jLabel1)
                    .addComponent(jLabel4)
                    .addComponent(jLabel5))
                .addGap(5, 5, 5)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTcon, javax.swing.GroupLayout.DEFAULT_SIZE, 309, Short.MAX_VALUE)
                    .addComponent(jTName, javax.swing.GroupLayout.DEFAULT_SIZE, 309, Short.MAX_VALUE)
                    .addComponent(jTStuId, javax.swing.GroupLayout.DEFAULT_SIZE, 309, Short.MAX_VALUE)
                    .addComponent(jTage, javax.swing.GroupLayout.DEFAULT_SIZE, 309, Short.MAX_VALUE)
                    .addComponent(jTadd, javax.swing.GroupLayout.DEFAULT_SIZE, 309, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jB_retrive, javax.swing.GroupLayout.DEFAULT_SIZE, 107, Short.MAX_VALUE)
                    .addComponent(jB_update, javax.swing.GroupLayout.DEFAULT_SIZE, 107, Short.MAX_VALUE)
                    .addComponent(jB_reset, javax.swing.GroupLayout.DEFAULT_SIZE, 107, Short.MAX_VALUE)
                    .addComponent(jB_delete, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 107, Short.MAX_VALUE)
                    .addComponent(jButton3, javax.swing.GroupLayout.DEFAULT_SIZE, 107, Short.MAX_VALUE)
                    .addComponent(jB_add, javax.swing.GroupLayout.DEFAULT_SIZE, 107, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(35, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTStuId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1)
                    .addComponent(jB_add))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)
                    .addComponent(jB_retrive, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jTage, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jB_update))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTcon, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4)
                    .addComponent(jB_reset))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTadd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jB_delete)
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton3))
        );

        jMenu1.setText("File");
        jMenu1.setMargin(new java.awt.Insets(1, 1, 1, 1));

        jMenuItem_adduser.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_U, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem_adduser.setText("User Access");
        jMenuItem_adduser.setToolTipText("User Administration");
        jMenuItem_adduser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem_adduserActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem_adduser);

        jMenuItem_exit.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F4, java.awt.event.InputEvent.ALT_MASK));
        jMenuItem_exit.setText("Exit");
        jMenuItem_exit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem_exitActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem_exit);

        jMenuBar1.add(jMenu1);

        jMenu3.setText("Tool");

        jMenuItem_backup.setText("Backup");
        jMenuItem_backup.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem_backupActionPerformed(evt);
            }
        });
        jMenu3.add(jMenuItem_backup);

        jMenuItem_restore.setText("Restore");
        jMenuItem_restore.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem_restoreActionPerformed(evt);
            }
        });
        jMenu3.add(jMenuItem_restore);

        jMenuItem_history.setText("HIstory");
        jMenuItem_history.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem_historyActionPerformed(evt);
            }
        });
        jMenu3.add(jMenuItem_history);

        jMenuBar1.add(jMenu3);

        jMenu2.setText("Help");

        about.setText("About ");
        about.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                aboutActionPerformed(evt);
            }
        });
        jMenu2.add(about);

        update.setText("Check For Updates");
        update.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateActionPerformed(evt);
            }
        });
        jMenu2.add(update);

        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jMenuItem_adduserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem_adduserActionPerformed

        new User().setVisible(true);
        // TODO add your handling code here:
    }//GEN-LAST:event_jMenuItem_adduserActionPerformed

    private void jMenuItem_exitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem_exitActionPerformed
        System.exit(0);        // TODO add your handling code here:
    }//GEN-LAST:event_jMenuItem_exitActionPerformed

    private void jMenuItem_backupActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem_backupActionPerformed
//JOptionPane.showMessageDialog(null, "this feature isnot yet impleated", "Message", JOptionPane.ERROR_MESSAGE);

          addtoZip();
    }//GEN-LAST:event_jMenuItem_backupActionPerformed

    private void jMenuItem_restoreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem_restoreActionPerformed
      //  JOptionPane.showMessageDialog(null, "this feature isnot yet impleated", "Message", JOptionPane.ERROR_MESSAGE);
JFrame f = new JFrame();
            f.setIconImage(toolkit.getImage(cl.getResource("image/java.png")));
            f.setTitle("select Image");
            //ask for image file
            JFileChooser chooser = new JFileChooser();
            chooser.showOpenDialog(f);

            if (chooser.getSelectedFile().getPath() != null) {
                System.out.println("Path: " + chooser.getSelectedFile().getPath());
                new ZipRetrieve(chooser.getSelectedFile().getPath(),".\\");

        }
 else
        {
                JOptionPane.showMessageDialog(null, "you have not selected the Back up file", "Message", JOptionPane.ERROR_MESSAGE);

 }
        
       // new ZipRetrieve("C:\\Users\\Navneet\\Desktop\\vj.zip","C:\\Users\\Navneet\\");
        // TODO add your handling code here:
    }//GEN-LAST:event_jMenuItem_restoreActionPerformed

    private void jMenuItem_historyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem_historyActionPerformed
        JOptionPane.showMessageDialog(null, "this feature isnot yet impleated", "Message", JOptionPane.ERROR_MESSAGE);
        // TODO add your handling code here:
    }//GEN-LAST:event_jMenuItem_historyActionPerformed

    private void aboutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_aboutActionPerformed
    new AboutUs().setVisible(true);
        //    JOptionPane.showMessageDialog(null, "this feature isnot yet impleated", "Message", JOptionPane.ERROR_MESSAGE);
        // TODO add your handling code here:
    }//GEN-LAST:event_aboutActionPerformed

    private void updateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateActionPerformed
        JOptionPane.showMessageDialog(null, "this feature isnot yet impleated", "Message", JOptionPane.ERROR_MESSAGE);
        // TODO add your handling code here:
    }//GEN-LAST:event_updateActionPerformed

    private void jBInsertActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBInsertActionPerformed
        try {
            jImagePanel.removeAll();
            jImagePanel.repaint();
            
            //create frame
            JFrame f = new JFrame();
            f.setIconImage(toolkit.getImage(cl.getResource("image/java.png")));
            f.setTitle("select Image");
            //ask for image file
            JFileChooser chooser = new JFileChooser();
            chooser.showOpenDialog(f);

            if (chooser.getSelectedFile().getPath() != null) {
                System.out.println("Path: " + chooser.getSelectedFile().getPath());

                //create panel with selected file
                _image = new ImagePanel(chooser.getSelectedFile().getPath(), jImagePanel.getWidth(), jImagePanel.getHeight());

                _image.setSize(jImagePanel.getSize());
                jImagePanel.add(_image, BorderLayout.CENTER);

                jImagePanel.repaint();

                isImage = true;

            }

        } catch (Exception e) {
            jImagePanel.removeAll();
            jImagePanel.repaint();


            System.out.println("Please verify that you selected a valid image file");
        }


        // TODO add your handling code here:
}//GEN-LAST:event_jBInsertActionPerformed

    private void jTStuIdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTStuIdActionPerformed
        // TODO add your handling code here:
}//GEN-LAST:event_jTStuIdActionPerformed

    private void jB_retriveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jB_retriveActionPerformed

        boolean flag = false;

        if (jTStuId.getText().length() != 0) {
            Student_model.loadAllEntries("./data/");
            String Sid = jTStuId.getText();
            int id = Integer.parseInt(Sid);
            for (Student_entity s : Student_model.AllStudents) {
                if (id == s.getId()) {
                    jTStuId.setText(String.valueOf(s.getId()));
                    jTadd.setText(s.getaddress());
                    jTcon.setText(String.valueOf(s.getcon()));
                    jTage.setText(String.valueOf(s.getage()));
                    jTName.setText(s.getName());

                    jImagePanel.removeAll();
                    jImagePanel.repaint();

                    if (s.getPhoto().isEmpty()) {

                        JOptionPane.showMessageDialog(null, "Photo of candidate not present ", "System Warning", JOptionPane.WARNING_MESSAGE);
                    } else {
                        ImagePanel p = base64.decodeBase64(s.getPhoto(), jImagePanel.getWidth(), jImagePanel.getHeight());
                        p.setSize(jImagePanel.getSize());
                        jImagePanel.add(p);
                        jImagePanel.repaint();
                    }
                    flag = true;
                    break;
                }


            }
            if (flag == false) {
                jTcon.setText("");//1
                jTStuId.setText("");//2
                jTadd.setText("");//3
                jTName.setText("");//4
                jTage.setText("");//5

                jImagePanel.removeAll();
                jImagePanel.repaint();

                JOptionPane.showMessageDialog(null, "Student entry not present!!!", "Message", JOptionPane.INFORMATION_MESSAGE);
            }

        } else {
            JOptionPane.showMessageDialog(null, "Please enter Student id!!", "Message", JOptionPane.INFORMATION_MESSAGE);
        }

        // TODO add your handling code here:
    }//GEN-LAST:event_jB_retriveActionPerformed

    private void jB_updateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jB_updateActionPerformed
        int flag = 0;
        boolean f = false;
        //boolean status=false;
        String status = "Please enter following information\n";

        if (jTStuId.getText().isEmpty()) {
            flag = 1;
            status = status + "Student ID\n";
            //JOptionPane.showMessageDialog(null,"Please Enter Student Id!", "Message", JOptionPane.INFORMATION_MESSAGE);
        }
        if (jTName.getText().isEmpty()) {
            flag = 1;
            status = status + "Student Name\n";
            //JOptionPane.showMessageDialog(null,"Please Enter Student Name!", "Message", JOptionPane.INFORMATION_MESSAGE);
        }
        if (jTadd.getText().isEmpty()) {
            flag = 1;
            status = status + "Student address\n";
            //JOptionPane.showMessageDialog(null,"Please Enter Student Name!", "Message", JOptionPane.INFORMATION_MESSAGE);
        }
        if (jTage.getText().isEmpty()) {
            flag = 1;
            status = status + "Student age\n";
            //JOptionPane.showMessageDialog(null,"Please Enter Student Name!", "Message", JOptionPane.INFORMATION_MESSAGE);
        }


        if (flag == 0) {
            Student_model.loadAllKeys("./data/");
            if (!jTStuId.getText().isEmpty()) {
                for (Integer i : Student_model.AllStudentKeys) {
                    if (jTStuId.getText().compareTo(String.valueOf(i)) == 0) {
                        f = true;
                    }
                }
            }
            if (f == true) {

                if (jTcon.getText().isEmpty()) {
                    _s.setcon(00);

                } else {

                    _s.setcon(Long.parseLong(jTcon.getText()));

                }


                if (isImage == true) {
                    _s.setPhoto(base64.codeBase64(_image.getImage()));
                    isImage = false;
                } else {
                }
                _s.setName(jTName.getText());
                _s.setAddress(jTadd.getText());
                _s.setId(Integer.parseInt(jTStuId.getText()));
                _s.setage(Integer.parseInt(jTage.getText()));

                JOptionPane.showMessageDialog(null, "You have been successfully Updated", "Confirmation Message", JOptionPane.INFORMATION_MESSAGE);
                _c.update(_s, "./data/");


            }




        } else {
            JOptionPane.showMessageDialog(null, status, "Message", JOptionPane.INFORMATION_MESSAGE);

        }


        // TODO add your handling code here:
}//GEN-LAST:event_jB_updateActionPerformed

    private void jB_resetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jB_resetActionPerformed
        jTName.setText("");
        jTStuId.setText("");
        jTadd.setText("");
        jTage.setText("");
        jTcon.setText("");
        jImagePanel.removeAll();
        jImagePanel.repaint();// TODO add your handling code here:
}//GEN-LAST:event_jB_resetActionPerformed

    private void jB_deleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jB_deleteActionPerformed
        if (jTStuId.getText().length() != 0) {
            String Sid = jTStuId.getText();
            int id = Integer.parseInt(Sid);

            for (Student_entity s : Student_model.AllStudents) {
                if (id == s.getId()) {
                    JOptionPane.showMessageDialog(null, "Student has been successfully truncated", "Confirmation Message", JOptionPane.INFORMATION_MESSAGE);
                    // System.out.println("Entry is deleted...control");
                    if (_c.delete(s, SPath)) {
                        jTStuId.setText("");//1

                        jTcon.setText("");//2
                        jTadd.setText(" ");//3
                        jTage.setText(" ");//4
                        jTName.setText("");//5
                        jImagePanel.removeAll();
                        jImagePanel.repaint();



                    }
                    break;

                }

            }
        } else {
            JOptionPane.showMessageDialog(null, "Please enter Student id!!", "Message", JOptionPane.INFORMATION_MESSAGE);
        }
        // TODO add your handling code here:
}//GEN-LAST:event_jB_deleteActionPerformed

    private void jPanel1ComponentAdded(java.awt.event.ContainerEvent evt) {//GEN-FIRST:event_jPanel1ComponentAdded
        // TODO add your handling code here:
}//GEN-LAST:event_jPanel1ComponentAdded

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        new StudentList().setVisible(true);

        // TODO add your handling code here:
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jB_addActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jB_addActionPerformed
        int flag = 0;

        //boolean status=false;
        String status = "Please enter following information\n";

        if (jTStuId.getText().isEmpty()) {
            flag = 1;
            status = status + "Student ID\n";
            //JOptionPane.showMessageDialog(null,"Please Enter Student Id!", "Message", JOptionPane.INFORMATION_MESSAGE);
        }
        if (jTName.getText().isEmpty()) {
            flag = 1;
            status = status + "Student Name\n";
            //JOptionPane.showMessageDialog(null,"Please Enter Student Name!", "Message", JOptionPane.INFORMATION_MESSAGE);
        }
        if (jTadd.getText().isEmpty()) {
            flag = 1;
            status = status + "Student address\n";
            //JOptionPane.showMessageDialog(null,"Please Enter Student Name!", "Message", JOptionPane.INFORMATION_MESSAGE);
        }
        if (jTage.getText().isEmpty()) {
            flag = 1;
            status = status + "Student age\n";
            //JOptionPane.showMessageDialog(null,"Please Enter Student Name!", "Message", JOptionPane.INFORMATION_MESSAGE);
        }

        //evrything is allright...
        if (flag == 0) {
            if (jTcon.getText().isEmpty()) {
                _s.setcon(00);
                // flag=1;
                // status=status+"Student Name\n";
                //JOptionPane.showMessageDialog(null,"Please Enter Student Name!", "Message", JOptionPane.INFORMATION_MESSAGE);
            } else {
                _s.setcon(Long.parseLong(jTcon.getText()));

            }


            if (isImage == true) {
                _s.setPhoto(base64.codeBase64(_image.getImage()));
            } else {
                try {
                    _s.setPhoto(base64.codeBase64(ImageIO.read(new File("./temp/snap.jpg"))));
                } catch (IOException ex) {
                    Logger.getLogger(Main_form.class.getName()).log(Level.SEVERE, null, ex);
                }

            }


            _s.setName(jTName.getText());
            _s.setAddress(jTadd.getText());
            _s.setId(Integer.parseInt(jTStuId.getText()));
            _s.setage(Integer.parseInt(jTage.getText()));

            //   JOptionPane.showMessageDialog(null,"You have been successfully registered", "Confirmation Message", JOptionPane.INFORMATION_MESSAGE);
            //JOptionPane.showMessageDialog(null,"Passed to controll.....1)", "Message", JOptionPane.INFORMATION_MESSAGE);
            _c.Add(_s, "./data/");


        } else {
            JOptionPane.showMessageDialog(null, status + "Photo, contact  No. is Optional..", "Message", JOptionPane.INFORMATION_MESSAGE);
        }


        // TODO add your handling code here:
    }//GEN-LAST:event_jB_addActionPerformed

    private void jMenuItem_backupActionPerformed1(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem_backupActionPerformed1
        // TODO add your handling code here:
    }//GEN-LAST:event_jMenuItem_backupActionPerformed1

       private void addtoZip() {
         Date d=new Date();
     d.getYear();
     d.getMonth();
     d.getDate();
        System.out.println("date is"+d.getDate()+"-"+d.getMonth()+1+"-"+d.getYear());
           /*			System.out
                            .println("dstBrowseButton.actionPerformed, event="
                            + evt);
            * Frame f=new
                             */
         JFrame f = new JFrame();
            f.setIconImage(toolkit.getImage(cl.getResource("image/java.png")));
            f.setTitle("select Image");
        JFileChooser fileChooser = new JFileChooser();
                            fileChooser.setDialogTitle("Select Destination Folder");
                            fileChooser.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
                            int result = fileChooser.showSaveDialog(Main_form.this);

                            if (result == JFileChooser.APPROVE_OPTION) {
                              path = fileChooser.getSelectedFile().toString();
                           // String    currentPath = file.getPath();
                                System.out.println("Current pah2="+path);
                          
                            }
        try {
           addtozip.zipFolder("./data/", path+"\\"+d.getDate()+"-"+d.getMonth()+1+"-"+d.getYear()+".bac");
            // TODO add your handling code here:
                  } catch (Exception ex) {
            Logger.getLogger(Main_form.class.getName()).log(Level.SEVERE, null, ex);
        }
      //  throw new UnsupportedOperationException("Not yet implemented");
    }
    void addzip()
    {
        
        //System.out.println("date is"+d.getDate()+"-"+d.getMonth()+1+"-"+d.getYear());
         
        try {
           addtozip.zipFolder("./data/","./enc/tempe.bac");
            // TODO add your handling code here:
                  } catch (Exception ex) {
            Logger.getLogger(Main_form.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                new Main_form().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem about;
    private javax.swing.JButton jBInsert;
    private javax.swing.JButton jB_add;
    private javax.swing.JButton jB_delete;
    private javax.swing.JButton jB_reset;
    private javax.swing.JButton jB_retrive;
    private javax.swing.JButton jB_update;
    private javax.swing.JButton jButton3;
    private javax.swing.JPanel jImagePanel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem_adduser;
    private javax.swing.JMenuItem jMenuItem_backup;
    private javax.swing.JMenuItem jMenuItem_exit;
    private javax.swing.JMenuItem jMenuItem_history;
    private javax.swing.JMenuItem jMenuItem_restore;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JTextField jTName;
    private javax.swing.JTextField jTStuId;
    private javax.swing.JTextField jTadd;
    private javax.swing.JTextField jTage;
    private javax.swing.JTextField jTcon;
    private javax.swing.JLabel lb7;
    private javax.swing.JMenuItem update;
    // End of variables declaration//GEN-END:variables
}